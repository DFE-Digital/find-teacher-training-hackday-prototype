{% extends "_layouts/default.njk" %}

{% set title %}
  {% if pagination.totalCount > 0 %}
    {{ pagination.totalCount | numeral('0,0') }} course {{- "s" if pagination.totalCount > 1 }} found
  {% else %}
    No courses found
  {% endif %}
{% endset %}

{% block content %}

  {% if data.cycleClosed %}
    {% include "_includes/cycle-closed-banner.njk" %}
  {% elif data.nearingEndOfCycle %}
    {% include "_includes/nearing-end-of-cycle-banner.njk" %}
  {% endif %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      {% include "./_search-terms.njk" %}

      <h1 class="govuk-heading-xl">
        {{ title }}
      </h1>

    </div>
  </div>

  <div class="app-filter-layout">
    <div class="app-filter-layout__filter">

      {% include "./_filter-panel.njk" %}

    </div>

    <div class="app-filter-layout__content">

      <div class="app-action-bar">
        <div class="app-action-bar__filter"></div>
      </div>

      {% include "./_promoted-link.njk" %}

      {% include "./_sort-options.njk" %}

      {% if courses.length %}

        <ul class="app-search-results">
          {% for course in courses %}

            <li class="app-search-results__item">
              {% set isLocationSearch = (data.q == "location") %}
              {% set isProviderSearch = (data.q == "provider") %}
              {% set isUniversity = (result.provider.provider_type == "university") %}
              {% set isAccreditedBody = data.provider.isAccreditedBody %}
              {% set trainingLocation = result.course.trainingLocation %}

              {{ appResultDetail({
                href: "/providers/" + course.trainingProvider.code + "/courses/" + course.code,
                providerName: course.trainingProvider.name | markdown("inline"),
                courseName: course.name + " (" + course.code + ")",
                schools: course.schools if not isUniversity and isLocationSearch,
                trainingPartners: course.trainingPartners if isProviderSearch and not isAccreditedBody,
                trainingPartner: data.provider.name if isProviderSearch and not isAccreditedBody,
                trainingLocation: {
                  distance: trainingLocation.distance,
                  address: trainingLocation.address
                } if trainingLocation and isUniversity and isLocationSearch,
                accreditedBody: course.trainingProvider.name,
                studyType: course.studyMode | getStudyModeLabel,
                qualification: course.qualification | getQualificationLabel('html') | safe,
                fundingOption: course.funding_option,
                degreeGrade: course.degreeGrade,
                visaSponsorship: course.visaSponsorship
              }) }}
            </li>
          {% endfor %}
        </ul>

        {% if pagination %}
          {% include "./_pagination.njk" %}
        {% endif %}

      {% else %}

        {% include "./_no-results.njk" %}

      {% endif %}

    </div>
  </div>
{% endblock %}

{% block pageScripts %}
<script type="module">
  import { FilterToggleButton } from '/public/javascripts/components/filter-toggle-button.js'

  const filterToggleButton = new FilterToggleButton({
    bigModeMediaQuery: '(min-width: 48.063em)',
    startHidden: false,
    toggleButton: {
      container: $('.app-action-bar__filter'),
      showText: 'Show filter',
      hideText: 'Hide filter',
      classes: 'govuk-button--secondary govuk-!-margin-bottom-3'
    },
    closeButton: {
      container: $('.app-filter__header-action'),
      text: 'Close'
    },
    filter: {
      container: $('.app-filter-layout__filter')
    }
  })

  filterToggleButton.init()
</script>

{% if userJourney in ["browse","filter"] %}
  <script type="module" >
  import { CheckboxFilter } from '/public/javascripts/components/checkbox-filter.js'

  const checkboxFilter = new CheckboxFilter({
    container: $('#subject'),
    textBox: {
      label: 'Search for subject'
    }
  })

  checkboxFilter.init()
  </script>

  <script src="/public/javascripts/accessible-autocomplete.min.js"></script>
  <script src="/public/javascripts/debounce.js"></script>
  <script src="/public/javascripts/init-autocomplete.js"></script>

  <script type="text/javascript">
  initAutocomplete({
    element: "provider-autocomplete",
    input: "provider",
    path: "/provider-suggestions",
  });
  </script>
{% endif %}
{% endblock %}
